# 回车:将 \r 后面的内容移到字符串开头，并逐一替换开头部分的字符，
# 直至将 \r 后面的内容完全替换完成。

# 效果1：
# 终端中会动态显示从 0% 到 100% 的进度，始终在同一行更新，不会产生多行输出

import time

print("-----case-1-----")

# 效果2：同一行依次显示
# “准备中”→“连接服务器”→“传输数据”→“完成”，实现简洁的状态更新。
for i in range(101):
    # \r 回到行首，用新进度覆盖旧进度，end="" 保持在同一行
    print(f"\r进度: [{i}%]", end="")
    time.sleep(0.1)  # 模拟耗时操作
print("\n完成!")


print("-----case-2-----")
status = ["准备中...", "连接服务器...", "传输数据...", "完成!"]
for s in status:
    print(f"\r当前状态: {s}", end="")  # 每次用新状态覆盖旧状态
    time.sleep(1)  # 模拟状态切换
print()  # 换行，避免后续输出与状态行重叠


# 效果3：使用 \r 实现百分比进度
print("-----case-3-----")
for i in range(101): # 添加进度条图形和百分比
    bar = '[' + '=' * (i // 2) + ' ' * (50 - i // 2) + ']'
    print(f"\r{bar} {i:3}%", end='', flush=True)
    time.sleep(0.05)
print()
